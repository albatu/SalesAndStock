@using Blazor2.Models.Stock
@using Business.Interfaces
@using Entities.Entities
@using Blazor2.ViewOperation.Interfaces
@inject IStockViewService StockViewService
@inject IStockService StockService
@inject IProductService ProductService
@inject NotificationService NotificationService
<RadzenTemplateForm Data="@entity" Submit="@((StockViewModel args) => { Submit(args); })">
    <RadzenFieldset Text="Stok Ekleme İşlemi">
        <div class="row" style="margin-bottom:5px">
            <div class="align-items-center d-flex col-md-3">
                <RadzenLabel Text="Ürün Seç" />
            </div>
            <div class="col-md-9">
                <RadzenDropDownDataGrid TValue="int" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                        AllowFiltering="true" AllowClear="true" @bind-Value="entity.ProductId"
                                        Data=@(productList) Style="width: 100%" AllowColumnResize="true" SelectedItem="entity"
                                        TextProperty="ProductName" ValueProperty="ProductId" AllowFilteringByAllStringColumns="true">
                    <Columns>
                        <RadzenDropDownDataGridColumn Property="ProductId" Title="Id" Width="100px" />
                        <RadzenDropDownDataGridColumn Property="ProductName" Title="Ürün Adı" Width="200px" />
                        <RadzenDropDownDataGridColumn Property="BrandsName" Title="Marka" Width="100px" />
                        <RadzenDropDownDataGridColumn Property="CateogryName" Title="Kategorisi" Width="100px" />
                    </Columns>
                </RadzenDropDownDataGrid>
            </div>
        </div>
        <div class="row" style="margin-bottom:5px">
            <div class="align-items-center d-flex col-md-3">
                <RadzenLabel Text="Stok Adeti" />
            </div>
            <div class="col-md-3">
                <RadzenNumeric Placeholder="300" style="width: 100%;" Name="Amount" @bind-Value="entity.Piece" />
            </div>
            <div class="align-items-center d-flex col-md-2">
                <RadzenLabel Text="Stok Tarihi:" />
            </div>
            <div class="col-md-4">
                <RadzenDatePicker ShowTime="true" @bind-Value="entity.StockDate"
                                  ShowSeconds="true" HoursStep="1" MinutesStep="5" SecondsStep="10"
                                  DateFormat="dd/MM/yyyy HH:mm" Class="w-100" />
            </div>
        </div>
        <div class="row" style="margin-bottom:5px">

            <div class="col-md-4">
            </div>
            <div class="col-md-4">
            </div>
            <div class="col-md-4">
                <RadzenButton Text="Stok Ekle" Icon="plus" ButtonStyle="ButtonStyle.Primary" ButtonType="ButtonType.Submit" />
            </div>
        </div>
    </RadzenFieldset>
</RadzenTemplateForm>
@code {
    StockViewModel entity;
    IEnumerable<StockViewModel> productList;
    [Parameter]
    public int Id { get; set; }
    [Parameter]
    public int ProductId { get; set; }
    protected override void OnInitialized()
    {

        var item = ProductService.GetById(ProductId);
        if (item == null)
        {

            entity = StockViewService.NewStock();
        }else
        {
            entity = StockViewService.Product(item);
        }


        productList = StockViewService.GetProductList();
        if (Id != 0)
        {

            entity = StockViewService.GetById(Id);
        }
        else
        {
            entity = StockViewService.NewStock();
        }
        base.OnInitialized();
    }

   
    void Submit(StockViewModel model)
    {
        var stock = StockService.Insert(StockViewService.TEntity(model));
        NotificationService.Notify(NotificationSeverity.Info, stock.ProductId.Name + " üründen toplam:" + stock.Piece.ToString() + " adet ürün eklenmiştir.");
    }

  
}
